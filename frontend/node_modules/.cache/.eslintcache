[{"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\index.js":"1","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\App.js":"2","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Home.js":"4","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\About.js":"5","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Customer.js":"6","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Mechanic.js":"7","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Contact.js":"8","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\ServiceAdvisor.js":"9","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\MechanicShowPage.js":"10","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Login.js":"11","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicDash.js":"12","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\Footer.js":"13","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerDash.js":"14","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\enquiryStatus.js":"15","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminDash.js":"16","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\addServiceReq.js":"17","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\newEnquiry.js":"18","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\PreviousServiceRequest.js":"19","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\viewServiceHistory.js":"20","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicFunc\\AddParts.js":"21","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewCustomerServiceReq.js":"22","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\AddNewAdmin.js":"23","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewServiceAdv.js":"24","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewMechanics.js":"25","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewCustomerEnq.js":"26","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\MyProfile.js":"27","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\PendingMechReq.js":"28","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ChangePassword.js":"29","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\FetchServiceReqest.js":"30","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\AddjobCards.js":"31","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\FetchJobCards.js":"32","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvDash.js":"33","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicDashMenuBar.js":"34","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\ScrollImages.js":"35","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerDashMenuBar.js":"36","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvMenuCard.js":"37","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminDashMenuBar.js":"38","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\layout\\Navbar.js":"39","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\layout\\DashNavbar.js":"40","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\UserAxios.js":"41","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\ServiceAdvisorAxios.js":"42","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\MechanicAxios.js":"43","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\CustomerAxios.js":"44","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\AdminAxios.js":"45"},{"size":517,"mtime":1708279389646,"results":"46","hashOfConfig":"47"},{"size":5100,"mtime":1709024535962,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1708279389781,"results":"49","hashOfConfig":"47"},{"size":3059,"mtime":1709062602602,"results":"50","hashOfConfig":"47"},{"size":1789,"mtime":1708368647240,"results":"51","hashOfConfig":"47"},{"size":7856,"mtime":1709111844416,"results":"52","hashOfConfig":"47"},{"size":7629,"mtime":1709062419490,"results":"53","hashOfConfig":"47"},{"size":757,"mtime":1709009321670,"results":"54","hashOfConfig":"47"},{"size":7651,"mtime":1709062419486,"results":"55","hashOfConfig":"47"},{"size":535,"mtime":1708279390288,"results":"56","hashOfConfig":"47"},{"size":4758,"mtime":1709062459620,"results":"57","hashOfConfig":"47"},{"size":3750,"mtime":1709063641986,"results":"58","hashOfConfig":"47"},{"size":2342,"mtime":1709063388464,"results":"59","hashOfConfig":"47"},{"size":3141,"mtime":1709032157914,"results":"60","hashOfConfig":"47"},{"size":2305,"mtime":1709027754290,"results":"61","hashOfConfig":"47"},{"size":3849,"mtime":1709023328745,"results":"62","hashOfConfig":"47"},{"size":3236,"mtime":1709027754290,"results":"63","hashOfConfig":"47"},{"size":2566,"mtime":1709061878067,"results":"64","hashOfConfig":"47"},{"size":2269,"mtime":1709027754290,"results":"65","hashOfConfig":"47"},{"size":2547,"mtime":1709028130376,"results":"66","hashOfConfig":"47"},{"size":4923,"mtime":1709029963316,"results":"67","hashOfConfig":"47"},{"size":4385,"mtime":1709027993543,"results":"68","hashOfConfig":"47"},{"size":4995,"mtime":1709027749604,"results":"69","hashOfConfig":"47"},{"size":2213,"mtime":1709028064419,"results":"70","hashOfConfig":"47"},{"size":2041,"mtime":1709028028102,"results":"71","hashOfConfig":"47"},{"size":3812,"mtime":1709027968234,"results":"72","hashOfConfig":"47"},{"size":2058,"mtime":1709062224941,"results":"73","hashOfConfig":"47"},{"size":3535,"mtime":1709027937806,"results":"74","hashOfConfig":"47"},{"size":5575,"mtime":1709062267468,"results":"75","hashOfConfig":"47"},{"size":2653,"mtime":1709030071418,"results":"76","hashOfConfig":"47"},{"size":12094,"mtime":1709029993455,"results":"77","hashOfConfig":"47"},{"size":2843,"mtime":1709030038911,"results":"78","hashOfConfig":"47"},{"size":4007,"mtime":1709009601979,"results":"79","hashOfConfig":"47"},{"size":750,"mtime":1709027237441,"results":"80","hashOfConfig":"47"},{"size":1772,"mtime":1709007347432,"results":"81","hashOfConfig":"47"},{"size":4433,"mtime":1709031614201,"results":"82","hashOfConfig":"47"},{"size":1959,"mtime":1709009601978,"results":"83","hashOfConfig":"47"},{"size":2096,"mtime":1709111701847,"results":"84","hashOfConfig":"47"},{"size":2264,"mtime":1709063763078,"results":"85","hashOfConfig":"47"},{"size":1637,"mtime":1708668524576,"results":"86","hashOfConfig":"47"},{"size":755,"mtime":1708279389969,"results":"87","hashOfConfig":"47"},{"size":564,"mtime":1708279389941,"results":"88","hashOfConfig":"47"},{"size":829,"mtime":1708279389911,"results":"89","hashOfConfig":"47"},{"size":1010,"mtime":1708279389879,"results":"90","hashOfConfig":"47"},{"size":1353,"mtime":1708279389848,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1ri93r6",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\index.js",[],["202","203"],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\App.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Home.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\About.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Customer.js",["204"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserFunctions from '../../Axios/UserAxios';\r\nimport classNames from 'classnames';\r\n\r\nconst Customer = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  const onRegister = (data) => {\r\n    if (Object.keys(errors).length > 0) {\r\n      alert('Please fix the errors in the form.');\r\n      return;\r\n    }\r\n\r\n    const { name, email, mobile, password } = data;\r\n\r\n    const add = {\r\n      name: name,\r\n      mobileNumber: mobile,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    UserFunctions.registerCustomer(add).then((res) => {\r\n      history.push('/login');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col-6' style={{ paddingTop: '100px' }}>\r\n            <img\r\n              src='/images/project images/Steam wash _ Eco Car Spa_files/registrationImages.jpg'\r\n              className='img-fluid'\r\n              alt='Registration Image'\r\n            />\r\n          </div>\r\n          <div className='col-6'>\r\n            <article\r\n              className='card-body w-100 mx-auto'\r\n              style={{ maxWidth: 500 }}\r\n            >\r\n              <h1 className='card-title mt-3 text-center'>USER</h1>\r\n              <p className='text-center'>Get started with your free account</p>\r\n              <form onSubmit={handleSubmit(onRegister)}>\r\n                <div className='form-group input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'>\r\n                      <i className='fa fa-user'></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type='text'\r\n                    placeholder='Full Name'\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.name,\r\n                    })}\r\n                    name='name'\r\n                    ref={register({\r\n                      required: 'Full name is required.',\r\n                      pattern: {\r\n                        value: /^[a-zA-Z\\s]*$/,\r\n                        message: 'Please enter a valid full name.',\r\n                      },\r\n                    })}\r\n                  ></input>\r\n                  {errors.name && (\r\n                    <div className='invalid-feedback'>{errors.name.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='form-group input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'>\r\n                      <i className='fa fa-envelope'></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type='text'\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.email,\r\n                    })}\r\n                    placeholder='E-mail Address'\r\n                    name='email'\r\n                    ref={register({\r\n                      required: 'This field is required.',\r\n                      pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&’+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)$/,\r\n                        message: 'Please enter a valid e-mail address.',\r\n                      },\r\n                    })}\r\n                  ></input>\r\n                  {errors.email && (\r\n                    <div className='invalid-feedback'>{errors.email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='form-group input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'>\r\n                      <i className='fa fa-phone'></i>\r\n                    </span>\r\n                  </div>\r\n                  <select className='custom-select' style={{ maxWidth: 80 }}>\r\n                    <option selected=''>+91</option>\r\n                  </select>\r\n                  <input\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.mobile,\r\n                    })}\r\n                    name='mobile'\r\n                    placeholder='Mobile Number'\r\n                    type='text'\r\n                    ref={register({\r\n                      required: 'This field is required.',\r\n                      pattern: {\r\n                        value: /^[0-9]{10}$/,\r\n                        message: 'Please enter a valid 10 digit mobile number.',\r\n                      },\r\n                    })}\r\n                  ></input>\r\n                  {errors.mobile && (\r\n                    <div className='invalid-feedback'>{errors.mobile.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='form-group input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'>\r\n                      <i className='fa fa-lock'></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type='password'\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder='Enter Your Password'\r\n                    name='password'\r\n                    ref={register({\r\n                      required: 'This field required.',\r\n                      pattern: {\r\n                        value: /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9]).{6,20}$/                        ,\r\n                        message:\r\n                          '6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter.',\r\n                      },\r\n                    })}\r\n                  ></input>\r\n                  {errors.password && (\r\n                    <div className='invalid-feedback'>\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='form-group input-group'>\r\n                  <div className='input-group-prepend'>\r\n                    <span className='input-group-text'>\r\n                      <i className='fa fa-lock'></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type='password'\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.confirm_password,\r\n                    })}\r\n                    placeholder='Confirm Your Password'\r\n                    name='confirm_password'\r\n                    ref={register({\r\n                      required: 'This field required.',\r\n                      validate: (value) =>\r\n                        value === getValues('password') ||\r\n                        \"password doesn't match.\",\r\n                    })}\r\n                  ></input>\r\n                  {errors.confirm_password && (\r\n                    <div className='invalid-feedback'>\r\n                      {errors.confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='form-group'>\r\n                  <button type='submit' className='btn btn-success btn-block'>\r\n                    CREATE ACCOUNT\r\n                  </button>\r\n                </div>\r\n                <p className='text-center'>\r\n                  Have an account? <a href='/login'>Log In</a>\r\n                </p>\r\n              </form>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Mechanic.js",["205","206","207"],"import React from 'react';\r\nimport Navbar from '../layout/Navbar';\r\nimport UserFunctions from '../../Axios/UserAxios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\n\r\nconst Mechanic = () => {\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  const onRegister = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.elements.name.value;\r\n    const email = e.target.elements.email.value;\r\n    const mobile = e.target.elements.mobile.value;\r\n    const password = e.target.elements.password.value;\r\n\r\n    const add = {\r\n      name: name,\r\n      mobileNumber: mobile,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    UserFunctions.registerMechanic(add).then((res) => {\r\n      history.push('/mechanic-show');\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n     \r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col-6' style={{paddingTop:'50px'}}>\r\n            <img src='/images/project images/Steam wash _ Eco Car Spa_files/mechanic.jpg' />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <article className=\"card-body w-100 mx-auto\" style={{ maxWidth: 500 }}>\r\n              <h1 className=\"card-title mt-3 text-center\">\r\n                WORKER\r\n              </h1>\r\n              <p className=\"text-center\">Get started with your free account</p>\r\n\r\n              <form onSubmit={onRegister}>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.name,\r\n                    })}\r\n                    name=\"name\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        message: \"name can't be blank.\",\r\n                      },\r\n                    })}></input>\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-envelope\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.email,\r\n                    })}\r\n                    placeholder=\"E-mail Address\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                        message: 'please enter a valid e-mail address.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.email && (\r\n                    <div className=\"invalid-feedback\">{errors.email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-phone\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select className=\"custom-select\" style={{ maxWidth: 80 }}>\r\n                    <option selected=\"\">+91</option>\r\n                  </select>\r\n                  <input\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.mobile,\r\n                    })}\r\n                    name=\"mobile\"\r\n                    placeholder=\"Mobile Number\"\r\n                    type=\"text\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        value: / /,\r\n                        message: 'please enter a valid 10 digit mobile number.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.mobile && (\r\n                    <div className=\"invalid-feedback\">{errors.mobile.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"password\"\r\n                    ref={register({\r\n                      required: 'this field required.',\r\n                      pattern: {\r\n                        value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\r\n                        message:\r\n                          '6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Your Password\"\r\n                    name=\"confirm_password\"\r\n                    ref={register({\r\n                      required: 'this field required.',\r\n                      validate: (value) =>\r\n                        value === getValues('password') ||\r\n                        \"password doesn't match.\",\r\n                    })}></input>\r\n                  {errors.confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n                    CREATE ACCOUNT\r\n                  </button>\r\n                </div>\r\n                <p className=\"text-center\">\r\n                  Have an account? <a href=\"/login\">Log In</a>\r\n                </p>\r\n              </form>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Mechanic;\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Contact.js",["208","209"],"import React from 'react';\r\nimport NavBar from '../layout/Navbar'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n    <div className=\"container-fluid\" >\r\n      <div className=\"py text-black blocktext\">\r\n     \r\n        <h1><b>CONTACT US</b></h1>\r\n        \r\n        <br></br><br></br>\r\n        <h4><strong>Name</strong>:- Kailash Somase</h4><br/>\r\n        <p>\r\n        <h4><strong>Contact Number</strong> :<a href=\"\"> +91 8605386753</a></h4></p><br/>\r\n        <p>\r\n        <h4><strong>Email </strong>:<a href=\"\"> kailashsomasepatil@gmail.com</a></h4></p><br/>\r\n        <h4><strong>Address</strong> : Near Jatra Hotel Konark Nagar Adagaon , Nashik -\t422003\r\n\r\n</h4>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\ServiceAdvisor.js",["210","211","212"],"import React from 'react';\r\nimport Navbar from '../layout/Navbar';\r\nimport UserFunctions from '../../Axios/UserAxios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\n\r\nconst ServiceAdvisor = () => {\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  const onRegister = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.elements.name.value;\r\n    const email = e.target.elements.email.value;\r\n    const mobile = e.target.elements.mobile.value;\r\n    const password = e.target.elements.password.value;\r\n\r\n    const add = {\r\n      name: name,\r\n      mobileNumber: mobile,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    UserFunctions.registerServiceAdvisor(add).then((res) => {\r\n      history.push('/login');\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <div className='col-6'style={{paddingTop:'50px'}}>\r\n            <img src='/images/project images/Steam wash _ Eco Car Spa_files/administrator-1188494_640.jpg'/>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <article className=\"card-body w-100 mx-auto\" style={{ maxWidth: 500 }}>\r\n              <h1 className=\"card-title mt-3 text-center\">\r\n                ADMINISTRATOR \r\n              </h1>\r\n              <p className=\"text-center\">Get started with your free account</p>\r\n              <form onSubmit={onRegister}>\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.name,\r\n                    })}\r\n                    name=\"name\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        message: \"name can't be blank.\",\r\n                      },\r\n                    })}></input>\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-envelope\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.email,\r\n                    })}\r\n                    placeholder=\"E-mail Address\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                        message: 'please enter a valid e-mail address.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.email && (\r\n                    <div className=\"invalid-feedback\">{errors.email.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-phone\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <select className=\"custom-select\" style={{ maxWidth: 80 }}>\r\n                    <option selected=\"\">+91</option>\r\n                  </select>\r\n                  <input\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.mobile,\r\n                    })}\r\n                    name=\"mobile\"\r\n                    placeholder=\"Mobile Number\"\r\n                    type=\"text\"\r\n                    ref={register({\r\n                      required: 'this field is required.',\r\n                      pattern: {\r\n                        value: / /,\r\n                        message: 'please enter a valid 10 digit mobile number.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.mobile && (\r\n                    <div className=\"invalid-feedback\">{errors.mobile.message}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"password\"\r\n                    ref={register({\r\n                      required: 'this field required.',\r\n                      pattern: {\r\n                        value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\r\n                        message:\r\n                          '6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter.',\r\n                      },\r\n                    })}></input>\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classNames('form-control', {\r\n                      'is-invalid': errors.confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Your Password\"\r\n                    name=\"confirm_password\"\r\n                    ref={register({\r\n                      required: 'this field required.',\r\n                      validate: (value) =>\r\n                        value === getValues('password') ||\r\n                        \"password doesn't match.\",\r\n                    })}></input>\r\n                  {errors.confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-success btn-block\">\r\n                    CREATE ACCOUNT\r\n                  </button>\r\n                </div>\r\n                <p className=\"text-center\">\r\n                  Have an account? <a href=\"/login\">Log In</a>\r\n                </p>\r\n              </form>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceAdvisor;\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\MechanicShowPage.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Login.js",["213","214"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../../login.css';\r\nimport Navbar from '../layout/Navbar';\r\nimport UserFunctions from '../../Axios/UserAxios';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onLogin = (data) => {\r\n    const email = data.email;\r\n    const pass = data.password;\r\n\r\n    const emailandpass = {\r\n      email: email,\r\n      password: pass,\r\n    };\r\n\r\n    UserFunctions.login(emailandpass).then((res) => {\r\n      console.log(res.data);\r\n      console.log('hii');\r\n      sessionStorage.setItem('user', JSON.stringify(res.data));\r\n      if (res.data.role === 'ADMIN')\r\n        history.push('/admin-dash');\r\n      else if (res.data.role === 'CUSTOMER')\r\n        history.push('/customer-dash');\r\n      else if (res.data.role === 'SERVICEADVISOR')\r\n        history.push('/serviceadvisor-dash');\r\n      else if (res.data.role === 'MECHANIC' && res.data.active == true)\r\n        history.push('/mechanic-dash');\r\n      else if (res.data.role === 'MECHANIC' && res.data.active == false)\r\n        history.push('/mechanic-show');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div id=\"login\">\r\n        <h3 className=\"text-center text-dark pt-5  \">Login form</h3>\r\n        <div className=\"container\">\r\n          <div\r\n            id=\"login-row\"\r\n            className=\"row justify-content-center align-items-center\">\r\n            <div id=\"login-column\" className=\"col-md-6\">\r\n              <div id=\"login-box\" className=\"col-md-12\">\r\n                <form\r\n                  id=\"login-form\"\r\n                  className=\"form\"\r\n                  onSubmit={handleSubmit(onLogin)}>\r\n                  <h3 className=\"text-center my-text\" id=\"my-text\">Login</h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" id=\"my-text\">\r\n                      Email Address :\r\n                    </label>\r\n                    <br></br>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classNames('form-control', {\r\n                        'is-invalid': errors.email,\r\n                      })}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      ref={register({\r\n                        required: 'Email is required.',\r\n                        pattern: {\r\n                          value: /^[a-zA-Z0-9.!#$%&’+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)$/,\r\n                          message: 'Please enter a valid email address.',\r\n                        },\r\n                      })}></input>\r\n                    {errors.email && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.email.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" id=\"my-text\" >\r\n                      Password :\r\n                    </label>\r\n                    <br></br>\r\n                    <input\r\n                      type=\"password\"\r\n                      className={classNames('form-control', {\r\n                        'is-invalid': errors.password,\r\n                      })}\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      ref={register({\r\n                        required: 'Password is required.',\r\n                      })}></input>\r\n                    {errors.password && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.password.message}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"remember-me\" id=\"my-text\">\r\n                      <span>Remember me</span>\r\n                      <span>\r\n                        <input\r\n                          id=\"remember-me\"\r\n                          name=\"remember-me\"\r\n                          type=\"checkbox\"></input>\r\n                      </span>\r\n                    </label>\r\n                    <br></br>\r\n                    <input\r\n                      style={{ marginLeft: 190 }}\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      value=\"submit\"></input>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br/><br/> <br/><br/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicDash.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerDash.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\enquiryStatus.js",["215","216","217"],"import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from '../CustomerDashMenuBar'\r\nimport CustomerFunctions from '../../../../Axios/CustomerAxios'\r\n\r\nclass enquiryStatus extends React.Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      enquiries:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const customer=sessionStorage.getItem('user')\r\n    const temp=JSON.parse(customer)\r\n    CustomerFunctions.viewEnquiry(temp.id).then((res)=>{\r\n      console.log(res.data)\r\n      this.setState(()=>{\r\n        return{\r\n          enquiries:res.data\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log(this.state.enquiries)\r\n  }\r\n  render(){\r\n\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <DashMenuBar />\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <h4 className=\"text-center\">Enquiry Status</h4>\r\n            <br />\r\n            <table\r\n              className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" colSpan=\"1\">\r\n                    Sr.No.\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Subject\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Description\r\n                  </th>\r\n                  <th>Response</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.enquiries.map((enq)=>{\r\n                  return (\r\n                    <tr>\r\n                  <th scope=\"row\" colSpan=\"1\">\r\n                    {enq.id}\r\n                  </th>\r\n                  <td scope=\"col\" colSpan=\"2\">{enq.subject}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">{enq.description}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">\r\n                    {enq.response !=null ?  enq.response : 'Not Yet Responded By Admin' } \r\n                  </td>\r\n                </tr>\r\n                  )\r\n                })}\r\n                \r\n              </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default enquiryStatus\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminDash.js",["218","219","220","221"],"import React from 'react'\r\n\r\nimport DashNavbar from './../../layout/DashNavbar'\r\nimport { Card, CardTitle, CardGroup, CardBody, Row, Col } from 'reactstrap'\r\nimport DashMenuBar from './AdminDashMenuBar'\r\nimport AdminFunctions from '../../../Axios/AdminAxios'\r\n\r\nclass AdminDash extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n\r\n    this.state={\r\n      totalcustomer:'',\r\n      totalserviceadvisor:'',\r\n      totalmechanic:'',\r\n      totalenquiry:''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n       AdminFunctions.getCountCustomers().then((res)=>{\r\n         const count=res.data\r\n          this.setState({\r\n            totalcustomer:count\r\n          })\r\n        \r\n       })\r\n\r\n       AdminFunctions.getCountMechanic().then((res)=>{\r\n        this.setState({\r\n          totalmechanic:res.data\r\n          })\r\n        \r\n       })\r\n\r\n       AdminFunctions.getCountEnquiry().then((res)=>{\r\n        this.setState({\r\n          totalenquiry:res.data\r\n          })\r\n        \r\n       })\r\n\r\n       AdminFunctions.getCountServiceAdvisor().then((res)=>{\r\n        this.setState({\r\n          totalserviceadvisor:res.data\r\n          })\r\n        \r\n       })\r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n  render(){\r\n\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"\">\r\n        <Row>\r\n            <div>\r\n              <DashMenuBar />\r\n            </div>\r\n          <Col>\r\n            {/* <CardGroup>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody>\r\n                  <p>\r\n                    <i class=\"fa fa-users fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalcustomer}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Customer</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody>\r\n                  <p>\r\n                    <i class=\"fa fa-user-circle fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalmechanic}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Mechanics</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody>\r\n                  <p>\r\n                    <i class=\"fa fa-user-circle fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalserviceadvisor}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Service Advisor</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody>\r\n                  <p>\r\n                    <i class=\"fa fa-spinner fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalenquiry}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Enquiry</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n            </CardGroup>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            */}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n              }\r\n}\r\n\r\nexport default AdminDash\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\addServiceReq.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\newEnquiry.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\PreviousServiceRequest.js",["222","223"],"import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from '../CustomerDashMenuBar'\r\nimport CustomerFunctions from '../../../../Axios/CustomerAxios'\r\n\r\nclass PreviousRequest extends React.Component {\r\n\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      request:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const customer=sessionStorage.getItem('user')\r\n    const temp=JSON.parse(customer)\r\n    CustomerFunctions.getPreviousServiceRequests(temp.id).then((res)=>{\r\n      console.log(res.data)\r\n      this.setState(()=>{\r\n        return{\r\n          request:res.data\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log(this.state.request)\r\n  }\r\n  render(){\r\n\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <DashMenuBar />\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <h4 className=\"text-center\">Enquiry Status</h4>\r\n            <br />\r\n            <table\r\n              className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" colSpan=\"1\">\r\n                    Vehicle Number\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Model\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Date Provided for Service\r\n                  </th>\r\n                  \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.request.map((req)=>{\r\n                  return (\r\n                    <tr>\r\n                  <th scope=\"row\" colSpan=\"1\">\r\n                    {req.vehicleNumber}\r\n                  </th>\r\n                  <td scope=\"col\" colSpan=\"2\">{req.model}</td>\r\n                  \r\n                  <td scope=\"col\" colSpan=\"3\">\r\n                    {req.date !=null ?  req.date : 'Not Yet Provided By Admin' } \r\n                  </td>\r\n                </tr>\r\n                  )\r\n                })}\r\n                \r\n              </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default PreviousRequest\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerFunc\\viewServiceHistory.js",["224","225","226","227","228"],"import React from 'react'\r\nimport { Row, Col, Table } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from '../CustomerDashMenuBar'\r\nimport CustomerFunctions from '../../../../Axios/CustomerAxios'\r\n\r\nclass viewServiceHistory extends React.Component {\r\n\r\n  \r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      records:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const customer=sessionStorage.getItem('user')\r\n    const temp=JSON.parse(customer)\r\n    CustomerFunctions.viewPreviousRecord(temp.email).then((res)=>{\r\n      console.log(res.data)\r\n      this.setState(()=>{\r\n        return{\r\n          records:res.data\r\n        }\r\n      })\r\n    })\r\n\r\n    console.log(this.state.records)\r\n  }\r\n  render(){\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <DashMenuBar />\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <h4 className=\"text-center py-5\">Service History</h4>\r\n            <br />\r\n            <Table className=\"py-4\">\r\n              <thead>\r\n                <tr>\r\n      \r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Vehicle Reg. No.\r\n                  </th>\r\n                  <th>Chasis Number</th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Service Type\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Servicing Date\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    WorkDone\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Bill Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.records.map((rec)=>{\r\n                  return (\r\n                  <tr>\r\n                  <th scope=\"row\">{rec.vehicleNo}</th>\r\n                  <td scope=\"col\" colSpan=\"2\">{rec.chasisNo}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">{rec.serviceType}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">{rec.date}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">{rec.suggestedWork}</td>\r\n                  <td scope=\"col\" colSpan=\"3\">{rec.billAmount}</td>\r\n                </tr>\r\n                  )\r\n                })}\r\n                \r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default viewServiceHistory\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicFunc\\AddParts.js",["229","230","231","232"],"import React, { useState } from 'react'\r\nimport { Multiselect } from 'multiselect-react-dropdown'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from './../MechanicDashMenuBar'\r\nimport MechanicFunctions from '../../../../Axios/MechanicAxios'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nclass AddParts extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      cards:[],\r\n      parts:[],\r\n      partsAdded:[],\r\n      billAmount:200\r\n    }\r\n    this.handleChange=this.handleChange.bind(this)\r\n    this.onRegister=this.onRegister.bind(this)\r\n  }\r\n\r\ncomponentDidMount(){\r\n\r\n  const user = sessionStorage.getItem('user')\r\n    const mechName = JSON.parse(user)\r\n    \r\n    //console.log(mechName.name)\r\n    \r\n    \r\n\r\n    \r\n    MechanicFunctions.getPendingWorks(mechName.name).then((res)=>{\r\n      console.log(res.data)\r\n\r\n      this.setState({\r\n        cards:res.data\r\n      })\r\n    })\r\n\r\n    MechanicFunctions.getPartsList().then((res)=>{\r\n    //  console.log(res.data)\r\n\r\n      this.setState({\r\n         parts:res.data\r\n      })\r\n    })\r\n}\r\n \r\n\r\nhandleChange(e){\r\n \r\n  const part=e.target.value\r\n\r\n   // console.log(part)\r\n    this.setState((prevState)=>{\r\n      return{\r\n        partsAdded:[\r\n          ...prevState.partsAdded,\r\n          part\r\n        ]\r\n      }\r\n    })\r\n      this.state.parts.map((p)=>{\r\n        \r\n          if(p.partName==part){\r\n            this.setState((prevState)=>{\r\n               return{\r\n                  billAmount:prevState.billAmount + p.rate\r\n               }\r\n            })\r\n          }\r\n      })\r\n\r\n    console.log(this.state.partsAdded)\r\n}\r\n\r\n  onRegister(card){\r\n     //console.log(card)\r\n    // console.log(this.state.partsAdded)\r\n    console.log(this.state.billAmount)\r\n    const body={\r\n      products:this.state.partsAdded,\r\n      billAmount:this.state.billAmount\r\n    }\r\n     MechanicFunctions.submitJobCard(card.id,body).then((res)=>{\r\n        console.log(res)\r\n     })\r\n\r\n     this.props.history.push('/mechanic-dash')\r\n\r\n  }\r\n  render(){\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <DashMenuBar />\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <h5>Customer Vehicle Details : </h5>\r\n            <br />\r\n            <br />\r\n\r\n            <table\r\n              className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Job .Id</th>\r\n                  \r\n                  <th scope=\"col\" colSpan=\"1\">\r\n                    Vehicle No.\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Chasis No.\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"1\">\r\n                    Service Type\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    All Suggested Work\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"3\">\r\n                    Add Parts\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"1\">\r\n                    Service Status\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.state.cards.map((card) => {\r\n                return (\r\n                  <tr style={{ height: 100 }}>\r\n                  <th scope=\"row\">{card.id}</th>\r\n                  <td colSpan=\"1\">{card.vehicleNo}</td>\r\n                  <td colSpan=\"2\">{card.chasisNo}</td>\r\n                  <td colSpan=\"1\">{card.serviceType}</td>\r\n                  <td colSpan=\"2\">{card.suggestedWork}</td>\r\n                  <td colspan=\"3\">\r\n                  <select multiple={true} value={this.state.value} name=\"partsAdded\" onChange={this.handleChange}>\r\n                    {this.state.parts.map((part)=>{\r\n                      \r\n                      return(\r\n                        <option value={part.partName}>{part.partName}</option>\r\n                      )\r\n                    })}\r\n              \r\n                   </select>\r\n                  </td>\r\n                      <td/>\r\n                  <td colSpan=\"3\">\r\n                    <button\r\n                      onClick={()=>{\r\n                        this.onRegister(card)\r\n                      }}\r\n                      type=\"button\"\r\n                      rel=\"tooltip\"\r\n                      className=\"btn btn-danger btn-round btn-just-icon btn-sm\"\r\n                      data-original-title=\"\"\r\n                      title=\"\">\r\n                      <i className=\"material-icons\">Service Done</i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              }\r\n              )\r\n          }\r\n                \r\n              </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default AddParts\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewCustomerServiceReq.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\AddNewAdmin.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewServiceAdv.js",["233"],"import React from 'react'\r\n\r\nimport { Row, Col } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from '../AdminDashMenuBar'\r\nimport AdminFunctions from '../../../../Axios/AdminAxios'\r\nimport reactDom from 'react-dom'\r\n\r\nclass ViewServiceAdvisor extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      serviceAdvisors:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    AdminFunctions.getAllServiceAdvisors().then((res)=>{\r\n      console.log(res.data)\r\n      this.setState(()=>{\r\n        return{\r\n          serviceAdvisors:res.data\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <DashNavbar />\r\n        <div className=\"py-5\">\r\n          <Row>\r\n            <Col md={12}>\r\n              <div>\r\n                <DashMenuBar />\r\n              </div>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md={12}>\r\n              <h4 className=\"text-center\">View Service Advisors</h4>\r\n              <br />\r\n              <br />\r\n              <table\r\n                className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">User Id</th>\r\n                    <th scope=\"col\" colSpan=\"1\">\r\n                      Name\r\n                    </th>\r\n                    <th scope=\"col\" colSpan=\"2\">\r\n                      Email\r\n                    </th>\r\n                    <th scope=\"col\" colSpan=\"1\">\r\n                      Mobile.No.\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.serviceAdvisors.map((ser)=>{\r\n                    return (\r\n                    <tr>\r\n                    <th scope=\"row\">{ser.id}</th>\r\n                    <td colSpan=\"1\">{ser.name}</td>\r\n                    <td colSpan=\"2\">{ser.email}</td>\r\n                    <td colSpan=\"1\">{ser.mobileNumber}</td>\r\n                  </tr>\r\n                  )\r\n                  })}\r\n                  \r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ViewServiceAdvisor\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewMechanics.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ViewCustomerEnq.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\MyProfile.js",["234","235"],"import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Row, Col } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\n\r\nclass MyProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      user: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = sessionStorage.getItem('user')\r\n    const temp = JSON.parse(user)\r\n    this.setState({\r\n      user: temp,\r\n    })\r\n\r\n    console.log(this.state.user)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DashNavbar />\r\n        <div className=\"py-5\" classname=\"text-black blocktext\">\r\n          <Row>\r\n            <Col md={8}>\r\n              <div>\r\n                <h3 className=\"card-title mt-3 text-center\">My Profile</h3>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div className=\"form-group profile\">\r\n                <img src='/images/project images/profile.png' className=\"img-fluid\" alt=\"profile Image\" />\r\n                </div>\r\n\r\n                <div className=\"form-group profile\">\r\n                  <h5>Name : {this.state.user.name}</h5>\r\n                </div>\r\n                <div className=\"form-group profile\">\r\n                  <h5>Email : {this.state.user.email}</h5>\r\n                </div>\r\n                <div className=\"form-group profile\">\r\n                  <h5>Mobile.No : {this.state.user.mobileNumber}</h5>\r\n                </div>\r\n\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <NavLink className=\"nav-link profilebutton\" exact to=\"/change-password\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-secondary btn-block\"\r\n                      style={{ maxWidth: 300 }}>\r\n                      Change Password\r\n                    </button>\r\n                  </NavLink>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyProfile\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\PendingMechReq.js",["236"],"import React from 'react'\r\n\r\nimport { Row, Col } from 'reactstrap'\r\nimport DashNavbar from '../../../layout/DashNavbar'\r\nimport DashMenuBar from '../AdminDashMenuBar'\r\nimport AdminFunctions from '../../../../Axios/AdminAxios'\r\n\r\n\r\n\r\n\r\nclass PendingMechReq extends React.Component{\r\n\r\n\r\n    \r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n\r\n    this.approveMech=this.approveMech.bind(this)\r\n    this.state = {\r\n      mechanic:[]\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\n  componentDidMount(){\r\n\r\n     AdminFunctions.getPendingMechanic().then((res)=>{\r\n       \r\n       /* res.data.map((p)=>{\r\n          console.log('map of res data',p)\r\n          this.setState((prevState)=>{\r\n            \r\n            let mechanic=prevState.mechanic\r\n            \r\n            mechanic.push(p)\r\n            console.log(mechanic)\r\n\r\n            return{ mechanic:mechanic }\r\n           \r\n          })\r\n        })*/\r\n          this.setState(()=>{\r\n            return {\r\n              mechanic:res.data\r\n            }\r\n          })\r\n      })\r\n     \r\n  }\r\n  \r\n  approveMech(mech){\r\n    console.log(mech.id)\r\n    \r\n   \r\n    this.setState((prevState)=>{\r\n      return {\r\n        mechnic: prevState.mechanic.filter((mechanic) => mechanic.id != mech.id),\r\n      }\r\n    })\r\n\r\n      AdminFunctions.updateMechanicStatus(mech.id).then((res)=>{\r\n        console.log(res.data)\r\n        this.props.history.push(\"/admin-dash\");\r\n      })\r\n\r\n      \r\n  }\r\n\r\n  render(){\r\n    \r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      \r\n      <div className=\"py-5\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <div>\r\n              <DashMenuBar />\r\n            </div>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col md={12}>\r\n            <h4 className=\"text-center\">Pending Mechanic Request</h4>\r\n            <br />\r\n            <br />\r\n            <table\r\n              className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">User Id</th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Name\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Email\r\n                  </th>\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    MobNumber\r\n                  </th>\r\n\r\n                  <th scope=\"col\" colSpan=\"2\">\r\n                    Status\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.mechanic.map((mech) => {\r\n                return (\r\n                  <tr style={{ height: 100 }}>\r\n                  <th scope=\"row\">{mech.id}</th>\r\n                  <td colSpan=\"2\">{mech.name}</td>\r\n                  <td colSpan=\"2\">{mech.email}</td>\r\n                  <td colSpan=\"2\">{mech.mobileNumber}</td>\r\n                  <td colSpan=\"2\">\r\n                    {' '}\r\n                    <button\r\n                      type=\"button\"\r\n                      rel=\"tooltip\"\r\n                      className=\"btn btn-danger btn-round btn-just-icon btn-sm\"\r\n                      data-original-title=\"\"\r\n                      title=\"\"\r\n                      onClick={() => {\r\n                        this.approveMech(mech)\r\n                      }}>\r\n                      <i className=\"material-icons\">Approve</i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n        })}\r\n            </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default PendingMechReq\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminFunc\\ChangePassword.js",["237"],"import React, { useState } from 'react';\r\n\r\nimport { Row, Col } from 'reactstrap';\r\nimport DashNavbar from '../../../layout/DashNavbar';\r\nimport DashMenuBar from '../AdminDashMenuBar';\r\nimport UserFunctions from '../../../../Axios/UserAxios';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\n\r\nconst ChangePassword = () => {\r\n  const [state, setState] = useState('');\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, errors, getValues } = useForm();\r\n\r\n  const changepassword = () => {\r\n    console.log(state);\r\n    const user = sessionStorage.getItem('user');\r\n    const temp = JSON.parse(user);\r\n    const email = temp['email'];\r\n    console.log(email);\r\n    const body = {\r\n      email: email,\r\n      password: state,\r\n    };\r\n\r\n    UserFunctions.changePassword(body).then((res) => {\r\n      console.log(res.data);\r\n\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n\r\n          <DashMenuBar />\r\n\r\n          <Col md={4}>\r\n          </Col>\r\n          <Col md={4}>\r\n            <br></br>\r\n            <br></br>\r\n            <div>\r\n              <h4 className=\"pt-4 mt-3 text-center\">Change Password</h4>\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <div className=\"text-center\">\r\n                <img src='/images/project images/changepassword.jfif' className=\"img-fluid\" alt=\"password Image\" />\r\n              </div><br></br><br></br>\r\n\r\n              <div className=\"form-group input-group pl-4\">\r\n                <h5>Old Password :</h5>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <input type=\"password\" style={{ width: 260, height: 40 }}></input>\r\n              </div>\r\n              <div className=\"form-group input-group pl-4\">\r\n                <h5>New Password : </h5>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <input\r\n                  type=\"password\"\r\n                  onChange={(e) => {\r\n                    setState(e.target.value);\r\n                  }}\r\n                  className={classNames('form-control', {\r\n                    'is-invalid': errors.password,\r\n                  })}\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  ref={register({\r\n                    required: 'this field is required.',\r\n                    pattern: {\r\n                      value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/,\r\n                      message:\r\n                        '6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter.',\r\n                    },\r\n                  })} ></input>\r\n                {errors.password && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.password.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group input-group pl-4\">\r\n                <h5>Confirm Password :</h5>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: ' &nbsp &nbsp',\r\n                  }}></div>\r\n                <input\r\n                  type=\"password\"\r\n                  style={{ width: 100 }}\r\n                  className={classNames('form-control', {\r\n                    'is-invalid': errors.confirm_password,\r\n                  })}\r\n                  placeholder=\"Confirm Your Password\"\r\n                  name=\"confirm_password\"\r\n                  ref={register({\r\n                    required: 'this field required.',\r\n                    validate: (value) =>\r\n                      value === getValues('password') ||\r\n                      \"password doesn't match.\",\r\n                  })}></input>\r\n                {errors.confirm_password && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.confirm_password.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <br></br>\r\n              <div className=\"form-group\">\r\n                <center>\r\n                  <button\r\n                    // onClick={changepassword}\r\n                    onClick={handleSubmit(changepassword)}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    style={{ maxWidth: 200 }}>\r\n                    Submit\r\n                  </button>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\FetchServiceReqest.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\AddjobCards.js",["238","239","240","241"],"import React, { useState } from 'react';\r\nimport DashNavbar from '../../../layout/DashNavbar';\r\nimport { Button, Row, Col, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n//import DropdownInput from \"react-dropdown-input\";\r\nimport ServiceAdvMenu from './../ServiceAdvMenuCard';\r\nimport ServiceAdvFunctions from '../../../../Axios/ServiceAdvisorAxios';\r\n\r\nclass AddJobCards extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mechanics: []\r\n    }\r\n    this.onRegister = this.onRegister.bind(this)\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    ServiceAdvFunctions.getAllMechanics().then((res) => {\r\n      this.setState(() => {\r\n        return {\r\n          mechanics: res.data\r\n        }\r\n      })\r\n      console.log(this.state.mechanics)\r\n      this.state.mechanics.map((mech) => {\r\n        //console.log(mech)\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  onRegister(e) {\r\n    e.preventDefault();\r\n    const customerName = e.target.elements.customerName.value;\r\n    const customerEmail = e.target.elements.customerEmail.value;\r\n    const mobNo = e.target.elements.mobNo.value;\r\n    const date = e.target.elements.date.value;\r\n    const estimateDate = e.target.elements.estimateDate.value;\r\n    const vehicleNo = e.target.elements.vehicleNo.value;\r\n    const model = e.target.elements.model.value;\r\n    const chasisNo = e.target.elements.chasisNo.value;\r\n    const serviceType = e.target.elements.serviceType.value;\r\n    const mechanicAssigned = e.target.elements.mechanicAssigned.value;\r\n    const suggestedWork = e.target.elements.suggestedWork.value;\r\n    const esitmatedBill = e.target.elements.esitmatedBill.value;\r\n\r\n    const register = {\r\n      customerName: customerName,\r\n      customerEmail: customerEmail,\r\n      mobNo: mobNo,\r\n      date: date,\r\n      estimateDate: estimateDate,\r\n      vehicleNo: vehicleNo,\r\n      model: model,\r\n      chasisNo: chasisNo,\r\n      serviceType: serviceType,\r\n      mechanicAssigned: mechanicAssigned,\r\n      suggestedWork: suggestedWork,\r\n      esitmatedBill: esitmatedBill,\r\n    }\r\n\r\n    ServiceAdvFunctions.addNewJobCard(register).then((res) => {\r\n      console.log(res.data);\r\n      this.props.history.push('/serviceadvisor-dash')\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <DashNavbar />\r\n        <div className=\"py-5\">\r\n          <Row>\r\n            <Col md={12}>\r\n              <ServiceAdvMenu />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h4\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                }}>\r\n                Add New Job Card\r\n              </h4>\r\n              <br></br>\r\n              <form onSubmit={this.onRegister}>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"container left\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td colspan=\"\">Name : </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"customerName\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Email :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"customerEmail\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Mobile Number :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"mobNo\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Date : </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"date\"\r\n                              className=\"form-control\"\r\n                              type=\"date\"></input>\r\n                          </td>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Delivery Date :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"estimateDate\"\r\n                              className=\"form-control\"\r\n                              type=\"date\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Vehicle No. :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"vehicleNo\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Model :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"model\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Chasis No. : </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"chasisNo\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Service type :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"serviceType\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Mechanic Assign :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <select value={this.state.mechanicSelected} name=\"mechanicAssigned\">\r\n                              {this.state.mechanics.map((mech) => {\r\n\r\n                                return (\r\n                                  <option name={mech}> {mech}</option>\r\n                                )\r\n                              })}\r\n\r\n                            </select>\r\n                          </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Suggestion : </td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              style={{ height: '80' }}\r\n                              name=\"suggestedWork\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>Estimated Bill :</td>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: ' &nbsp &nbsp',\r\n                            }}></div>\r\n                          <td>\r\n                            <input\r\n                              name=\"esitmatedBill\"\r\n                              className=\"form-control\"\r\n                              type=\"text\"></input>\r\n                          </td>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <br />\r\n                    <tr colspan=\"8\">\r\n                      <td colSpan=\"8\"></td>\r\n                      <td></td>\r\n                      <td>\r\n                        <div>\r\n                          <Button color=\"danger\">Submit</Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </Col>\r\n                </Row>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default AddJobCards;\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvFunc\\FetchJobCards.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvDash.js",["242","243"],"import React from 'react'\r\nimport DashNavbar from './../../layout/DashNavbar'\r\nimport { Card, CardTitle, CardGroup, CardBody, Row, Col } from 'reactstrap'\r\nimport ScrollImages from './../ScrollImages'\r\nimport ServiceAdvMenu from './ServiceAdvMenuCard'\r\nimport AdminFunctions from '../../../Axios/AdminAxios'\r\nimport ServiceAdvFunctions from '../../../Axios/ServiceAdvisorAxios'\r\n\r\nclass ServiceAdvDash extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state={\r\n      totalcustomer:'',\r\n      totalcards:'',\r\n      totalmechanic:'',\r\n      totalenquiry:''\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    AdminFunctions.getCountCustomers().then((res)=>{\r\n      const count=res.data\r\n       this.setState({\r\n         totalcustomer:count\r\n       })\r\n     \r\n    })\r\n\r\n    AdminFunctions.getCountMechanic().then((res)=>{\r\n     this.setState({\r\n       totalmechanic:res.data\r\n       })\r\n     \r\n    })\r\n\r\n    AdminFunctions.getCountEnquiry().then((res)=>{\r\n     this.setState({\r\n       totalenquiry:res.data\r\n       })\r\n     \r\n    })\r\n\r\n    ServiceAdvFunctions.getAllJobCardsCount().then((res)=>{\r\n     this.setState({\r\n       totalcards:res.data\r\n       })\r\n     \r\n    })\r\n   \r\n}\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n      <DashNavbar />\r\n      <div className=\"py-5\">\r\n        <Row>\r\n          \r\n          <Col>\r\n            <CardGroup>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody style={{color:'yellow'}}>\r\n                  <p>\r\n                    <i class=\"fa fa-users fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalcustomer}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Customer</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody style={{color:'yellow'}}>\r\n                  <p>\r\n                    <i class=\"fa fa-user-circle fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalmechanic}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Mechanics</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody style={{color:'yellow'}}>\r\n                  <p>\r\n                    <i class=\"fa fa-address-card fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalcards}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Card</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: ' &nbsp &nbsp',\r\n                }}></div>\r\n\r\n              <Card body inverse color=\"secondary\" className=\"text-center\">\r\n                <CardBody style={{color:'yellow'}}>\r\n                  <p>\r\n                    <i class=\"fa fa-spinner fa-2x\" aria-hidden=\"true\"></i>\r\n                  </p>\r\n                  <br />\r\n                  <CardTitle tag=\"h5\">{this.state.totalenquiry}</CardTitle>\r\n                  <CardTitle tag=\"h5\">Total Enquiry</CardTitle>\r\n                </CardBody>\r\n              </Card>\r\n            </CardGroup>\r\n            <br></br>\r\n            <br></br> <br></br>{' '}\r\n           \r\n          </Col>\r\n          {/* <Col md={2}>\r\n            <div>\r\n              <ServiceAdvMenu />\r\n            </div>\r\n          </Col> */}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n              }\r\n}\r\n\r\nexport default ServiceAdvDash\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\MechanicDashMenuBar.js",["244","245"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nconst DashMenuBar = () => {\r\n  return (\r\n\r\n    <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n\r\n      <h3\r\n        style={{\r\n          color: '#196F3D',\r\n          textAlign: 'center',\r\n          margin: '2px 0 2px 20px'\r\n        }}>MECHANIC DASHBOARD</h3>\r\n\r\n      <div class=\"btn-group mr-3\" role=\"group\" aria-label=\"First group\">\r\n        <NavLink className=\"nav-link\" exact to=\"/add-parts\">\r\n          <Button outline color=\"secondary\">\r\n            View Job Cards\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default DashMenuBar\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\ScrollImages.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\CustomerDashMenuBar.js",["246","247"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\nconst DashMenuBar = () => {\r\n  return (\r\n\r\n    <div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n\r\n      <h3\r\n        style={{\r\n          color: '#196F3D',\r\n          textAlign: 'center',\r\n          margin: '2px 0 2px 20px'\r\n        }}>CUSTOMER DASHBOARD</h3>\r\n\r\n      <div class=\"btn-group mr-3\" role=\"group\" aria-label=\"First group\">\r\n        <NavLink className=\"nav-link\" exact to=\"/new-enquiry\">\r\n          <Button outline color=\"secondary\">\r\n             New Enquiry\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div class=\"btn-group mr-3\" role=\"group\" aria-label=\"Second group\">\r\n        <NavLink className=\"nav-link\" exact to=\"/enquiry-status\">\r\n          <Button outline color=\"secondary\">\r\n             Enquiry Status\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n\r\n\r\n      <div class=\"btn-group mr-3\" role=\"group\" aria-label=\"First group\">\r\n        <NavLink className=\"nav-link\" exact to=\"/add-service-req\">\r\n          <Button outline color=\"secondary\">\r\n             Service Request\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div class=\"btn-group mr-3\" role=\"group\" aria-label=\"Second group\">\r\n        <NavLink className=\"nav-link\" exact to=\"/previous-request\">\r\n          <Button outline color=\"secondary\">\r\n            View Request\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //   <div>\r\n    //     <ListGroup>\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/customer-dash\">\r\n    //           <h5 style={{color:'#00BFFF'}}>\r\n    //             {' '}\r\n    //             <i className=\"fa fa-dashboard\"></i>\r\n    //             <p>Customer DashBoard</p>\r\n    //           </h5>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/new-enquiry\">\r\n    //           <Button outline color=\"secondary\">\r\n    //             Add New Enquiry\r\n    //           </Button>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/enquiry-status\">\r\n    //           <Button outline color=\"secondary\">\r\n    //             View Enquiry Status\r\n    //           </Button>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/add-service-req\">\r\n    //           <Button outline color=\"secondary\">\r\n    //             Add Service Request\r\n    //           </Button>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/previous-request\">\r\n    //           <Button outline color=\"secondary\">\r\n    //             View Previous Service Request\r\n    //           </Button>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n\r\n    //       <ListGroupItem\r\n    //       style={{\r\n    //         display: 'flex',\r\n    //         justifyContent: 'center',\r\n    //         backgroundColor:'Moccasin'\r\n    //       }}>\r\n    //         <NavLink className=\"nav-link\" exact to=\"/previous-request\">\r\n    //           <Button outline color=\"secondary\">\r\n    //             View Previous Service Request\r\n    //           </Button>\r\n    //         </NavLink>\r\n    //       </ListGroupItem>\r\n    //     </ListGroup>\r\n    //   </div>\r\n  )\r\n}\r\n\r\nexport default DashMenuBar\r\n","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\ServiceAdvMenuCard.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\pages\\Dashboard\\AdminDashMenuBar.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\components\\layout\\DashNavbar.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\UserAxios.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\ServiceAdvisorAxios.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\MechanicAxios.js",[],"C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\CustomerAxios.js",["248"],"import axios from 'axios'\r\n\r\n\r\nconst URL=\"http://localhost:9000/customer\"\r\n\r\nclass CustomerFunctions\r\n{\r\n\r\n    addNewEnquiry(enquiry) \r\n    {\r\n       return axios.post(URL+'/addenquiry',enquiry)\r\n    }   \r\n\r\n    viewEnquiry(id)\r\n    {\r\n        return axios.get(URL+'/viewenquiry'+'/'+id)\r\n    }\r\n\r\n    viewPreviousRecord(email){\r\n        return axios.get(URL+'/previousrecord',{\r\n            params: {\r\n              email: email\r\n            }\r\n          })\r\n    }\r\n\r\n    addServiceRequest(request){\r\n        return axios.post(URL+'/requestbycustomer',request)\r\n    }\r\n\r\n    getPreviousServiceRequests(id){\r\n        return axios.get(URL+'/showpreviousrequest/'+id)\r\n    }\r\n\r\n    getCountOfRequest(custId){\r\n        return axios.get(URL+'/countofrequest/'+custId)\r\n    }\r\n\r\n    getCountOfRepair(custId){\r\n        return axios.get(URL+'/countofrepair/'+custId)\r\n    }\r\n\r\n    getCountOfEnquiry(custId){\r\n        return axios.get(URL+'/countofenquiry/'+custId)\r\n    }\r\n\r\n}\r\nexport default new CustomerFunctions();","C:\\Users\\om\\Desktop\\GMSProject\\vehical servicing center Frontend+backend v2.2\\frontend\\src\\Axios\\AdminAxios.js",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":36,"column":13,"nodeType":"255","endLine":40,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"260","line":11,"column":21,"nodeType":"258","messageId":"259","endLine":11,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":37,"column":13,"nodeType":"255","endLine":37,"endColumn":93},{"ruleId":"263","severity":1,"message":"264","line":16,"column":46,"nodeType":"255","endLine":16,"endColumn":57},{"ruleId":"263","severity":1,"message":"264","line":18,"column":37,"nodeType":"255","endLine":18,"endColumn":48},{"ruleId":"256","severity":1,"message":"257","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"260","line":11,"column":21,"nodeType":"258","messageId":"259","endLine":11,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":36,"column":13,"nodeType":"255","endLine":36,"endColumn":109},{"ruleId":"265","severity":1,"message":"266","line":33,"column":64,"nodeType":"267","messageId":"268","endLine":33,"endColumn":66},{"ruleId":"265","severity":1,"message":"266","line":35,"column":64,"nodeType":"267","messageId":"268","endLine":35,"endColumn":66},{"ruleId":"269","severity":1,"message":"270","line":70,"column":23,"nodeType":"271","endLine":70,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":71,"column":23,"nodeType":"271","endLine":71,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":72,"column":23,"nodeType":"271","endLine":72,"endColumn":34},{"ruleId":"256","severity":1,"message":"272","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":14},{"ruleId":"256","severity":1,"message":"273","line":4,"column":16,"nodeType":"258","messageId":"259","endLine":4,"endColumn":25},{"ruleId":"256","severity":1,"message":"274","line":4,"column":27,"nodeType":"258","messageId":"259","endLine":4,"endColumn":36},{"ruleId":"256","severity":1,"message":"275","line":4,"column":38,"nodeType":"258","messageId":"259","endLine":4,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":70,"column":23,"nodeType":"271","endLine":70,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":72,"column":23,"nodeType":"271","endLine":72,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":73,"column":23,"nodeType":"271","endLine":73,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":74,"column":23,"nodeType":"271","endLine":74,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":75,"column":23,"nodeType":"271","endLine":75,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":76,"column":23,"nodeType":"271","endLine":76,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":77,"column":23,"nodeType":"271","endLine":77,"endColumn":34},{"ruleId":"256","severity":1,"message":"276","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"277","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":64,"column":31,"nodeType":"280","messageId":"281","endLine":64,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":66,"column":24,"nodeType":"267","messageId":"268","endLine":66,"endColumn":26},{"ruleId":"256","severity":1,"message":"282","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":16},{"ruleId":"256","severity":1,"message":"276","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":38,"column":17,"nodeType":"255","endLine":38,"endColumn":107},{"ruleId":"265","severity":1,"message":"283","line":61,"column":70,"nodeType":"267","messageId":"268","endLine":61,"endColumn":72},{"ruleId":"253","severity":1,"message":"254","line":54,"column":17,"nodeType":"255","endLine":54,"endColumn":116},{"ruleId":"256","severity":1,"message":"276","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"284","line":3,"column":28,"nodeType":"258","messageId":"259","endLine":3,"endColumn":37},{"ruleId":"256","severity":1,"message":"285","line":3,"column":39,"nodeType":"258","messageId":"259","endLine":3,"endColumn":52},{"ruleId":"278","severity":1,"message":"279","line":28,"column":39,"nodeType":"280","messageId":"281","endLine":28,"endColumn":41},{"ruleId":"256","severity":1,"message":"286","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":20},{"ruleId":"256","severity":1,"message":"287","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":22},{"ruleId":"256","severity":1,"message":"284","line":3,"column":18,"nodeType":"258","messageId":"259","endLine":3,"endColumn":27},{"ruleId":"256","severity":1,"message":"285","line":3,"column":29,"nodeType":"258","messageId":"259","endLine":3,"endColumn":42},{"ruleId":"256","severity":1,"message":"284","line":3,"column":18,"nodeType":"258","messageId":"259","endLine":3,"endColumn":27},{"ruleId":"256","severity":1,"message":"285","line":3,"column":29,"nodeType":"258","messageId":"259","endLine":3,"endColumn":42},{"ruleId":"288","severity":1,"message":"289","line":16,"column":44,"nodeType":"267","messageId":"290","endLine":16,"endColumn":45},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardGroup' is defined but never used.","'CardBody' is defined but never used.","'useState' is defined but never used.","'Multiselect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'reactDom' is defined but never used.","Expected '!==' and instead saw '!='.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'ScrollImages' is defined but never used.","'ServiceAdvMenu' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]